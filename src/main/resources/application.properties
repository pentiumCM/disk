#全局的配置文件
#通过注解@Value(value="${config.name}")就可以绑定到你想要的属性上面
#如：@Value("${spring.redis.host}")
#   private String host;
logging.level.org.springframework.data=DEBUG
logging.path=C:/var/log/cloud_disk
logging.level.com.favorites=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=ERROR

spring.datasource.url=jdbc:mysql://localhost:3306/cloud_disk?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name= com.mysql.cj.jdbc.Driver

#配置自动建表：updata:没有表新建，有表更新操作,控制台显示建表语句
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.database=mysql


spring.thymeleaf.cache=false
# 模板的模式
spring.thymeleaf.mode=HTML5


#redis
#redis是一个key-value存储系统 缓存机制说明：
#所有的查询结果都放进了缓存，也就是把MySQL查询的结果放到了redis中去， 然后第二次发起该条查询时就可以从redis中去读取查询的结果，
# 从而不与MySQL交互，从而达到优化的效果，redis的查询速度之于MySQL的查询速度相当于 内存读写速度 /硬盘读写速度
#缓存主要在service层进行，查询的结果会缓存，把对象序列号存到redis中去，key就是注解中的参数，例如@Cacheable("findUsers"): 存在redis中的key就是findUsers。
# 缓存了这个结果之后再次请求这个方法就不会去数据库中查，而是从redis缓存中读取数据，这样就减少了跟数据库之间的交互。
# 然后修改、删除、增加操作就会清除缓存，保持数据的一致性。
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=localhost
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接超时时间（毫秒）
spring.redis.timeout=1000


spring.mvc.view.prefix=classpath:/templates
spring.mvc.view.suffix=.html

spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8
spring.jackson.serialization.write-dates-as-timestamps=false

#配置tomcat
server.port=8080

#修改项目的访问路径
#server.servlet.context-path=/account/login

#文件上传路径
file.save.path=F:/upload/CloudDisk/uploadFile/
#单个文件最大
multipart.maxFileSize=3000MB
#设置总上传数据总大小
multipart.maxRequestSize=10000MB

APP_ID=15848876
API_KEY=kErNQjsWnr3cOCmBXcBoNrrg
SECRET_KEY=oVednql9m8GoA9ci0gmZCkOTpR9xL6fQ


#是否打开，想打开下边就写true
spring.auto.openurl=false
spring.web.loginurl=http://localhost:8080
spring.web.googleexcute=C:\\Users\\84267\\AppData\\Local\\Google\\Chrome\\Application\\chrome.exe


